<?xml version="1.0"?>
<typesystem package="QtMobility.Gallery">
    <load-typesystem name="typesystem_core.xml" generate="no"/>
    <load-typesystem name="typesystem_gui.xml" generate="no"/>
    <namespace-type name="QtMobility" generate="no"/>

    <object-type name="QtMobility::QAbstractGallery" />
    <object-type name="QtMobility::QDocumentGallery" />
    <enum-type name="QtMobility::QDocumentGallery::Error" />

    <object-type name="QtMobility::QGalleryAbstractRequest" />
    <enum-type name="QtMobility::QGalleryAbstractRequest::State" />
    <enum-type name="QtMobility::QGalleryAbstractRequest::Status" />
    <enum-type name="QtMobility::QGalleryAbstractRequest::RequestType" />
    <enum-type name="QtMobility::QGalleryAbstractRequest::RequestError" />
    <object-type name="QtMobility::QGalleryAbstractResponse" />

    <value-type name="QtMobility::QGalleryFilter" />
    <enum-type name="QtMobility::QGalleryFilter::Type" />
    <enum-type name="QtMobility::QGalleryFilter::Comparator" />
    <value-type name="QtMobility::QGalleryIntersectionFilter">
        <modify-function signature="QGalleryIntersectionFilter(const QtMobility::QGalleryUnionFilter&amp;)" remove="all"/>
        <add-function signature="operator&amp;(const QtMobility::QGalleryUnionFilter&amp;)" return-type="QtMobility::QGalleryIntersectionFilter">
            <inject-code class="target" position="beginning">
                QGalleryIntersectionFilter filt = *%CPPSELF &amp;&amp; %1;
                return %CONVERTTOPYTHON[QtMobility::QGalleryIntersectionFilter](filt);
            </inject-code>
        </add-function>
        <add-function signature="operator&amp;(const QtMobility::QGalleryMetaDataFilter&amp;)" return-type="QtMobility::QGalleryIntersectionFilter">
            <inject-code class="target" position="beginning">
                QGalleryIntersectionFilter filt = *%CPPSELF &amp;&amp; %1;
                return %CONVERTTOPYTHON[QtMobility::QGalleryIntersectionFilter](filt);
            </inject-code>
        </add-function>
        <add-function signature="operator&amp;(const QtMobility::QGalleryIntersectionFilter&amp;)" return-type="QtMobility::QGalleryIntersectionFilter">
            <inject-code class="target" position="beginning">
                QGalleryIntersectionFilter filt = *%CPPSELF &amp;&amp; %1;
                return %CONVERTTOPYTHON[QtMobility::QGalleryIntersectionFilter](filt);
            </inject-code>
        </add-function>
    </value-type>
    <value-type name="QtMobility::QGalleryUnionFilter">
        <modify-function signature="QGalleryUnionFilter(const QtMobility::QGalleryIntersectionFilter&amp;)" remove="all"/>
        <add-function signature="operator&amp;(const QtMobility::QGalleryUnionFilter&amp;)" return-type="QtMobility::QGalleryIntersectionFilter">
            <inject-code class="target" position="beginning">
                QGalleryIntersectionFilter filt = *%CPPSELF &amp;&amp; %1;
                return %CONVERTTOPYTHON[QtMobility::QGalleryIntersectionFilter](filt);
            </inject-code>
        </add-function>
        <add-function signature="operator&amp;(const QtMobility::QGalleryMetaDataFilter&amp;)" return-type="QtMobility::QGalleryIntersectionFilter">
            <inject-code class="target" position="beginning">
                QGalleryIntersectionFilter filt = *%CPPSELF &amp;&amp; %1;
                return %CONVERTTOPYTHON[QtMobility::QGalleryIntersectionFilter](filt);
            </inject-code>
        </add-function>
        <add-function signature="operator&amp;(const QtMobility::QGalleryIntersectionFilter&amp;)" return-type="QtMobility::QGalleryIntersectionFilter">
            <inject-code class="target" position="beginning">
                QGalleryIntersectionFilter filt = *%CPPSELF &amp;&amp; %1;
                return %CONVERTTOPYTHON[QtMobility::QGalleryIntersectionFilter](filt);
            </inject-code>
        </add-function>
    </value-type>
    <value-type name="QtMobility::QGalleryMetaDataFilter">
        <add-function signature="operator&amp;(const QtMobility::QGalleryUnionFilter&amp;)" return-type="QtMobility::QGalleryIntersectionFilter">
            <inject-code class="target" position="beginning">
                QGalleryIntersectionFilter filt = *%CPPSELF &amp;&amp; %1;
                return %CONVERTTOPYTHON[QtMobility::QGalleryIntersectionFilter](filt);
            </inject-code>
        </add-function>
        <add-function signature="operator&amp;(const QtMobility::QGalleryMetaDataFilter&amp;)" return-type="QtMobility::QGalleryIntersectionFilter">
            <inject-code class="target" position="beginning">
                QGalleryIntersectionFilter filt = *%CPPSELF &amp;&amp; %1;
                return %CONVERTTOPYTHON[QtMobility::QGalleryIntersectionFilter](filt);
            </inject-code>
        </add-function>
        <add-function signature="operator&amp;(const QtMobility::QGalleryIntersectionFilter&amp;)" return-type="QtMobility::QGalleryIntersectionFilter">
            <inject-code class="target" position="beginning">
                QGalleryIntersectionFilter filt = *%CPPSELF &amp;&amp; %1;
                return %CONVERTTOPYTHON[QtMobility::QGalleryIntersectionFilter](filt);
            </inject-code>
        </add-function>
    </value-type>

    <object-type name="QtMobility::QGalleryItemRequest" />
    <object-type name="QtMobility::QGalleryProperty">
        <!-- TODO <add-function signature="QGalleryProperty(const char*)">
            <inject-code class="target" position="beginning">
                %0 = new %TYPE(%1);
            </inject-code>
        </add-function>-->

        <add-function signature="equals(const QVariant&amp;) const" return-type="QtMobility::QGalleryMetaDataFilter">
            <inject-code class="target" position="beginning">
            %RETURN_TYPE ret = *(%CPPSELF) == %1;
            %PYARG_0 = %CONVERTTOPYTHON[%RETURN_TYPE](ret);
            </inject-code>
        </add-function>
        <add-function signature="__str__()" return-type="PyObject*">
            <inject-code class="target" position="beginning">
                %PYARG_0 = PyString_FromString(%CPPSELF.name().toAscii());
            </inject-code>
        </add-function>

        <!-- Private usage but no explicit private declaration in C++ -->
        <modify-field name="m_length" remove="all"/>
        <modify-field name="m_name" remove="all"/>
    </object-type>
    <enum-type name="QtMobility::QGalleryProperty::Attribute" flags="QtMobility::QGalleryProperty::Attributes"/>

    <object-type name="QtMobility::QGalleryQueryModel" />
    <object-type name="QtMobility::QGalleryQueryRequest" />
    <enum-type name="QtMobility::QGalleryQueryRequest::Scope" />
    <value-type name="QtMobility::QGalleryResource" />
    <object-type name="QtMobility::QGalleryResultSet" />

    <object-type name="QtMobility::QGalleryType">
        <add-function signature="__str__()" return-type="PyObject*">
            <inject-code class="target" position="beginning">
                %PYARG_0 = PyString_FromString(%CPPSELF.name().toAscii());
            </inject-code>
        </add-function>
    </object-type>
    <object-type name="QtMobility::QGalleryTypeRequest" />

</typesystem>
